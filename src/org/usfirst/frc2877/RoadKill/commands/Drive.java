// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc2877.RoadKill.commands;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc2877.RoadKill.Robot;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 *
 */
public class Drive extends Command {

    double firstWheel = 0.9;
    double secondWheel = 0.9;
    int count = 10;

    public Drive() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
        requires(Robot.driveTrain);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    // Called just before this Command runs the first time

    protected void initialize() {
    }
    // Called repeatedly when this Command is scheduled to run

    protected void execute() {
        //double x = Robot.oi.joystick1.getX();
        //double y = Robot.oi.joystick1.getY();
        //Robot.driveTrain.drive(x, y);
        if (--count == 0) {
            count = 10;
            if (Robot.oi.joystickButton1.get()) {
                firstWheel -= .01;
            }
            if (Robot.oi.joystickButton4.get() == true) {
                firstWheel += .01;
            }
            if (Robot.oi.joystickButton2.get() == true) {
                secondWheel += .01;
            }
            if (Robot.oi.joystickButton3.get() == true) {
                secondWheel -= .01;
            }
            SmartDashboard.putNumber("First wheel", firstWheel);
            SmartDashboard.putNumber("Second wheel", secondWheel);

        }
        Robot.driveTrain.drive(firstWheel, secondWheel);

    }
    // Make this return true when this Command no longer needs to run execute()

    protected boolean isFinished() {
        return false;
    }
    // Called once after isFinished returns true

    protected void end() {
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run

    protected void interrupted() {
        end();
    }
}
